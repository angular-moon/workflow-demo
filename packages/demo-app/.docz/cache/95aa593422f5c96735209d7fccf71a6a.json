{"remainingRequest":"E:\\apps\\workflow-demo\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[\"react-app\",[\"E:\\\\apps\\\\workflow-demo\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[[\"styled-components\",{\"displayName\":true}],\"lodash\",[\"ramda\",{\"useES\":true}],[\"E:\\\\apps\\\\workflow-demo\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!E:\\apps\\workflow-demo\\node_modules\\react-docgen-typescript-loader\\dist\\index.js?{}!E:\\apps\\workflow-demo\\packages\\demo-common\\src\\utils\\history.js","dependencies":[{"path":"E:\\apps\\workflow-demo\\packages\\demo-common\\src\\utils\\history.js","mtime":1548162479667},{"path":"E:\\apps\\workflow-demo\\node_modules\\docz-core\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1546830921223},{"path":"E:\\apps\\workflow-demo\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js","mtime":1546917132353},{"path":"E:\\apps\\workflow-demo\\node_modules\\react-docgen-typescript-loader\\dist\\index.js","mtime":1548139925241}],"contextDependencies":[],"result":["import{createBrowserHistory}from'history';import{getConfirmation}from'./confirmation';function getBase(url){if(!url)return url;/**\n   * 解析 url 的正则表达式, 匹配第一个出现的[和非'/'相邻的'/']分解url\n   * @example:\n   * url: \"https://gec123.com/demo\"\n   * result: [\"https://gec123.com/demo\", \"https:/\", \"/gec123.com/demo\"]\n   * @example:\n   * url: \"//gec123.com/demo\"\n   * result: [\"//gec123.com/demo\", \"/\", \"/gec123.com/demo\"]\n   * @example:\n   * url:  \"/gec123.com/demo\"\n   * result: [\"/gec123.com/demo\", \"\", \"/gec123.com/demo\"]\n   */ // eslint-disable-next-line no-useless-escape\nvar regx=/(.*?)(\\/[^\\/].*)/;var result=regx.exec(url);/* eslint-disable indent */return result[1]?\"/\".concat(result[2].split('/').slice(2).join('/')):result[2];}var history=createBrowserHistory({basename:getBase(process.env.REACT_APP_PUBLIC_URL),getUserConfirmation:getConfirmation});export default history;",{"version":3,"sources":["E:\\apps\\workflow-demo\\packages\\demo-common\\src\\utils\\history.js"],"names":["createBrowserHistory","getConfirmation","getBase","url","regx","result","exec","split","slice","join","history","basename","process","env","REACT_APP_PUBLIC_URL","getUserConfirmation"],"mappings":"AAAA,OAASA,oBAAT,KAAqC,SAArC,CACA,OAASC,eAAT,KAAgC,gBAAhC,CAEA,QAASC,CAAAA,OAAT,CAAiBC,GAAjB,CAAsB,CACpB,GAAI,CAACA,GAAL,CAAU,MAAOA,CAAAA,GAAP,CACV;;;;;;;;;;;KAFoB,CAcpB;AACA,GAAMC,CAAAA,IAAI,CAAG,kBAAb,CACA,GAAMC,CAAAA,MAAM,CAAGD,IAAI,CAACE,IAAL,CAAUH,GAAV,CAAf,CACA,2BACA,MAAOE,CAAAA,MAAM,CAAC,CAAD,CAAN,YACCA,MAAM,CAAC,CAAD,CAAN,CACDE,KADC,CACK,GADL,EAEDC,KAFC,CAEK,CAFL,EAGDC,IAHC,CAGI,GAHJ,CADD,EAKHJ,MAAM,CAAC,CAAD,CALV,CAMD,CAED,GAAMK,CAAAA,OAAO,CAAGV,oBAAoB,CAAC,CACnCW,QAAQ,CAAET,OAAO,CAACU,OAAO,CAACC,GAAR,CAAYC,oBAAb,CADkB,CAEnCC,mBAAmB,CAAEd,eAFc,CAAD,CAApC,CAKA,cAAeS,CAAAA,OAAf","sourcesContent":["import { createBrowserHistory } from 'history';\nimport { getConfirmation } from './confirmation';\n\nfunction getBase(url) {\n  if (!url) return url;\n  /**\n   * 解析 url 的正则表达式, 匹配第一个出现的[和非'/'相邻的'/']分解url\n   * @example:\n   * url: \"https://gec123.com/demo\"\n   * result: [\"https://gec123.com/demo\", \"https:/\", \"/gec123.com/demo\"]\n   * @example:\n   * url: \"//gec123.com/demo\"\n   * result: [\"//gec123.com/demo\", \"/\", \"/gec123.com/demo\"]\n   * @example:\n   * url:  \"/gec123.com/demo\"\n   * result: [\"/gec123.com/demo\", \"\", \"/gec123.com/demo\"]\n   */\n  // eslint-disable-next-line no-useless-escape\n  const regx = /(.*?)(\\/[^\\/].*)/;\n  const result = regx.exec(url);\n  /* eslint-disable indent */\n  return result[1]\n    ? `/${result[2]\n        .split('/')\n        .slice(2)\n        .join('/')}`\n    : result[2];\n}\n\nconst history = createBrowserHistory({\n  basename: getBase(process.env.REACT_APP_PUBLIC_URL),\n  getUserConfirmation: getConfirmation,\n});\n\nexport default history;\n"]}]}